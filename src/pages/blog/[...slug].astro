---
import { getCollection, render } from "astro:content";
import BaseLayout from "~layouts/base.astro";
import { SEO } from "astro-seo";
import Navigation from "~components/navigation";

export async function getStaticPaths() {
    const blog = await getCollection("blog", ({ data }) => {
        return import.meta.env.PROD ? data.draft !== true : true;
    });

    return blog.map((entry) => ({
        params: { slug: entry.id },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);
---

<BaseLayout>
    {
        entry.data.image ?
            <SEO
                slot="seo"
                title={entry.data.title}
                description={entry.data.description}
                extend={{
                    meta: [
                        {
                            property: "og:url",
                            content: new URL(
                                Astro.url.pathname,
                                Astro.site,
                            ).toString(),
                        },
                        { property: "og:title", content: entry.data.title },
                        {
                            property: "og:description",
                            content: entry.data.description,
                        },
                        { property: "og:image", content: entry.data.image },
                        { property: "og:type", content: "article" },
                        {
                            property: "og:article:published_time",
                            content: entry.data.datePublished.toISOString(),
                        },
                        {
                            property: "og:article:author",
                            content: "Jade van Dörsten",
                        },
                        { property: "og:article:author", content: "vandorsx" },
                    ],
                }}
            />
        :   <SEO
                slot="seo"
                title={entry.data.title}
                description={entry.data.description}
                extend={{
                    meta: [
                        {
                            property: "og:url",
                            content: new URL(
                                Astro.url.pathname,
                                Astro.site,
                            ).toString(),
                        },
                        { property: "og:title", content: entry.data.title },
                        {
                            property: "og:description",
                            content: entry.data.description,
                        },
                        { property: "og:type", content: "article" },
                        {
                            property: "og:article:published_time",
                            content: entry.data.datePublished.toISOString(),
                        },
                        {
                            property: "og:article:author",
                            content: "Jade van Dörsten",
                        },
                        { property: "og:article:author", content: "vandorsx" },
                    ],
                }}
            />
    }

    <header slot="header">
        <Navigation
            Links={[
                { href: "/", text: "Home" },
                { href: "/blog", text: "Blog" },
                { href: `/blog/${entry.id}`, text: `${entry.data.title}` },
            ]}
        />
    </header>

    <article>
        <header class="flex flex-col-reverse">
            <h1 class="font-medium">{entry.data.title}</h1>
            <time class="text-[14px]"
                ><time
                    datetime={new Date(entry.data.datePublished)
                        .toISOString()
                        .substring(0, 10)}
                >
                    {
                        new Date(entry.data.datePublished)
                            .toISOString()
                            .substring(0, 10)
                    }
                </time></time
            >
        </header>
        <div class="prose">
            <Content />
        </div>
    </article>
</BaseLayout>
