---
import type { Microblog } from "~libs/microblog";
import DynamicTimestamp from "~components/microblog/dynamic-timestamp";
import transformImage from "~libs/mb-img-transform";
import { createRichLinks, createLegacyRichLinks } from "~libs/mb-rich-links";

interface Props {
   post: Microblog;
   inFeed?: boolean;
   lazyImages?: boolean;
}

const { post, inFeed, lazyImages } = Astro.props;

const [year, month, day] = post.date_published
   .split("T")[0]
   .split("-")
   .map(Number);

let contentHtml = post.content_html;
contentHtml = transformImage(
   post.content_html,
   post.photos,
   lazyImages ? "lazy" : undefined,
);
contentHtml = createRichLinks(contentHtml);
contentHtml = createLegacyRichLinks(contentHtml);

const nonRelativeDateOptions: Intl.DateTimeFormatOptions = {
   year: "numeric",
   month: "long",
   day: "numeric",
   hour: "2-digit",
   minute: "2-digit",
   hourCycle: "h23",
};
---

<style>
   header a {
      @apply no-underline;
   }
   header .anchor {
      @apply no-underline hover:underline;
   }
</style>

<article>
   {
      inFeed ?
         <header class="font-serif mb-4 leading-none">
            <a
               href={`/microblog/${year}/${month}/${day}/${post.id}`}
               class="inline-flex flex-col gap-2"
            >
               <span class="italic text-xs text-black/[.72] anchor">
                  <Fragment>
                     Posted{" "}
                     <time
                        datetime={post.date_published}
                        title={new Date(
                           post.date_published.slice(0, -5),
                        ).toLocaleString("en-US", nonRelativeDateOptions)}
                     >
                        <DynamicTimestamp
                           date={post.date_published}
                           client:load
                        />
                     </time>
                  </Fragment>
                  {post.date_modified &&
                     post.categories?.includes("show_updated") && (
                        <Fragment>
                           & updated
                           <span
                              title={new Date(
                                 post.date_modified.slice(0, -5),
                              ).toLocaleString("en-US", nonRelativeDateOptions)}
                           >
                              <DynamicTimestamp
                                 date={post.date_modified}
                                 client:load
                              />
                           </span>
                        </Fragment>
                     )}
               </span>
               {post.titled_post && <h2>{post.title}</h2>}
            </a>
         </header>
      :  <header class="font-serif mb-4 pt-1 leading-none">
            <div class="inline-flex flex-col gap-3">
               <span
                  class="italic text-black/[.72]"
                  class:list={[{ "text-slightly-smaller": post.titled_post }]}
               >
                  Posted{" "}
                  <time datetime={post.date_published}>
                     {new Date(post.date_published.slice(0, -5)).toLocaleString(
                        "en-US",
                        nonRelativeDateOptions,
                     )}
                     {post.date_modified &&
                        post.categories?.includes("show_updated") && (
                           <Fragment>
                              & updated{" "}
                              {new Date(
                                 post.date_modified.slice(0, -5),
                              ).toLocaleString("en-US", nonRelativeDateOptions)}
                           </Fragment>
                        )}
                  </time>
               </span>
               {post.titled_post && (
                  <h2 class="inline-block pb-1 leading-none text-[calc(1em+1px)]">
                     {post.title}
                  </h2>
               )}
            </div>
         </header>
   }

   <Fragment set:html={contentHtml} />
</article>
