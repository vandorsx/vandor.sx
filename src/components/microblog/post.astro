---
import type { Microblog } from "~libs/microblog";
import DynamicTimestamp from "~components/microblog/dynamic-timestamp";
import transformImage from "~libs/mb-img-transform";
import { createRichLinks, createLegacyRichLinks } from "~libs/mb-rich-links";

interface Props {
    post: Microblog;
    inFeed?: boolean;
    lazyImages?: boolean;
}

const { post, inFeed, lazyImages } = Astro.props;

const [year, month, day] = post.date_published
    .split("T")[0]
    .split("-")
    .map(Number);

let contentHtml = post.content_html;
contentHtml = transformImage(
    post.content_html,
    post.photos,
    lazyImages ? "lazy" : undefined,
);
contentHtml = createRichLinks(contentHtml);
contentHtml = createLegacyRichLinks(contentHtml);

export function isOlderThanWeek(dateString: string): boolean {
    const date = new Date(dateString.slice(0, -5));
    const oneWeekAgo = new Date();
    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);

    return date < oneWeekAgo;
}

const nonRelativeDateOptions: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "short",
    day: "numeric",
    hour: "2-digit",
    minute: "2-digit",
    hour12: false,
};

function formatDate(dateString: string): string {
    const date = new Date(dateString.slice(0, -5));

    return new Intl.DateTimeFormat("en-US", nonRelativeDateOptions).format(
        date,
    );
}
---

<article>
    {
        post.titled_post ?
            <header class="flex flex-col-reverse">
                <h2 class="font-medium">
                    {inFeed ?
                        <a
                            href={`/microblog/${year}/${month}/${day}/${post.id}`}
                            class="hyperlink"
                        >
                            {post.title}
                        </a>
                    :   <Fragment>{post.title}</Fragment>}
                </h2>
                <div class="text-[14px]">
                    <Fragment>
                        <time
                            datetime={post.date_published}
                            title={new Date(
                                post.date_published.slice(0, -5),
                            ).toLocaleString("en-US", nonRelativeDateOptions)}
                        >
                            {!isOlderThanWeek(post.date_published) ?
                                <DynamicTimestamp
                                    date={post.date_published}
                                    client:load
                                />
                            :   formatDate(post.date_published)}
                        </time>
                    </Fragment>
                    {post.date_modified &&
                        post.categories?.includes("show_updated") && (
                            <Fragment>
                                (updated:
                                <span
                                    title={new Date(
                                        post.date_modified.slice(0, -5),
                                    ).toLocaleString(
                                        "en-US",
                                        nonRelativeDateOptions,
                                    )}
                                >
                                    {!isOlderThanWeek(post.date_modified) ?
                                        <DynamicTimestamp
                                            date={post.date_modified}
                                            client:load
                                        />
                                    :   formatDate(post.date_modified)}
                                </span>
                                )
                            </Fragment>
                        )}
                </div>
            </header>
        :   <header>
        {inFeed ?
            <a
                href={`/microblog/${year}/${month}/${day}/${post.id}`}
                class="hyperlink font-medium"
            >
                <Fragment>
                    <time
                        datetime={post.date_published}
                        title={new Date(
                            post.date_published.slice(0, -5),
                        ).toLocaleString("en-US", nonRelativeDateOptions)}
                    >
                        {!isOlderThanWeek(post.date_published) ?
                            <DynamicTimestamp
                                date={post.date_published}
                                client:load
                            />
                        :   formatDate(post.date_published)}
                    </time>
                </Fragment>
                {post.date_modified &&
                    post.categories?.includes("show_updated") && (
                        <Fragment>
                            (updated:
                            <span
                                title={new Date(
                                    post.date_modified.slice(0, -5),
                                ).toLocaleString(
                                    "en-US",
                                    nonRelativeDateOptions,
                                )}
                            >
                                {!isOlderThanWeek(post.date_modified) ?
                                    <DynamicTimestamp
                                        date={post.date_modified}
                                        client:load
                                    />
                                :   formatDate(post.date_modified)}
                            </span>
                            )
                        </Fragment>
                    )}
            </a>
        :   <div class="font-medium"><Fragment>
            <time
                datetime={post.date_published}
                title={new Date(
                    post.date_published.slice(0, -5),
                ).toLocaleString("en-US", nonRelativeDateOptions)}
            >
                {!isOlderThanWeek(post.date_published) ?
                    <DynamicTimestamp
                        date={post.date_published}
                        client:load
                    />
                :   formatDate(post.date_published)}
            </time>
        </Fragment>
        {post.date_modified &&
            post.categories?.includes("show_updated") && (
                <Fragment>
                    (updated:
                    <span
                        title={new Date(
                            post.date_modified.slice(0, -5),
                        ).toLocaleString(
                            "en-US",
                            nonRelativeDateOptions,
                        )}
                    >
                        {!isOlderThanWeek(post.date_modified) ?
                            <DynamicTimestamp
                                date={post.date_modified}
                                client:load
                            />
                        :   formatDate(post.date_modified)}
                    </span>
                    )
                </Fragment>
            )}</div>
        </header>
    }

    <div class="prose" set:html={contentHtml} />
</article>
